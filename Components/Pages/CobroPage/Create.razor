@page "/Cobro/Create"
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject CobroService cobroService
@inject PrestamosServices prestamosServices

<EditForm Model="cobro" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
   <div class="container">
        <div class="card shadow-lg mt-3">
            <div class="card-header ">
                <h5 class="card-header ">Registro de Cobros</h5>
            </div>

            <div class="container px-5">
                <div class="row mb-5">
                    <!-- CobroId -->
                    <div class="col-md-8">
                        <label for="CobroId" class="form-label"><strong>CobroId:</strong></label>
                        <div class="input-group">
                            <div style="width: 40%;">
                                <InputNumber @bind-Value="cobro.CobroId" class="form-control" style="font-size: 0.8rem;" aria-describedby="bottonbuscar" />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Fecha -->
                <div class="row mb-5">
                    <div class="col-md-8">
                        <label for="Fecha" class="form-label"><strong>Fecha:</strong></label>
                        <InputDate @bind-Value="cobro.Fecha" class="form-control" />
                        <ValidationMessage For="@(() => cobro.Fecha)" />
                    </div>
                </div>

                <div class="row mb-5">
                    <!-- Deudor -->
                    <div class="col-md-6">
                        <label for="Deudor" class="form-label"><strong>Deudor:</strong></label>
                        <select @onchange="OnDeudorSelected" class="form-control">
                            <option value="0">Seleccione un deudor</option>
                            @foreach (var deudor in deudor)
                            {
                                <option value="@deudor.DeudorId">@deudor.Nombres</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => cobro.DeudorId)" />
                    </div>
                </div>

                <div class="row mb-5">
                    <!-- Monto -->
                    <div class="col-md-5">
                        <label for="Monto" class="form-label"><strong>Monto:</strong></label>
                        <InputNumber @bind-Value="cobro.Monto" class="form-control" />
                        <ValidationMessage For="@(() => cobro.Monto)" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="card shadow-lg mt-3">
            <div class="card-header">
                <h5 class="card-header">Cobros Detalle</h5>
            </div>

            <div class="card-body">
                <div class="row mb-5">
                    <!-- DetalleId -->
                    <div class="col-md-6">
                        <label for="DetalleId" class="form-label"><strong>DetalleId:</strong></label>
                        <div class="input-group">
                            <div style="width: 50%; height: 1mm;">
                                <InputNumber @bind-Value="cobroDetalle.DetalleId" class="form-control" style="font-size: 0.9rem;" aria-describedby="bottonbuscar" />
                            </div>
                        </div>
                    </div>

                    <!-- CobroId  -->
                    <div class="col-md-6">
                        <label for="CobroId" class="form-label"><strong>CobroId:</strong></label>
                        <div class="input-group">
                            <div style="width: 50%; height: 1mm;">
                                <InputNumber @bind-Value="cobroDetalle.CobroId" class="form-control" style="font-size: 0.9rem;" />
                            </div>
                            <button type="button" @onclick="AgregarDetalle" class="btn btn-outline-primary ms-2">
                                <span class="bi bi-plus"></span> Agregar
                            </button>
                        </div>
                        <ValidationMessage For="@(() => cobroDetalle.CobroId)" />
                    </div>
                </div>

                <div class="row mb-5">
                    <!-- PrestamoId -->
                    <div class="col-md-12">
                        <label for="PrestamoId" class="form-label"><strong>PrestamoId:</strong></label>
                        <InputNumber @bind-Value="cobroDetalle.PrestamoId" class="form-control" style="font-size: 0.9rem;" />
                        <ValidationMessage For="@(() => cobroDetalle.PrestamoId)" />
                    </div>

                    <!-- ValorCobrado -->
                    <div class="col-md-12">
                        <label for="ValorCobrado" class="form-label"><strong>ValorCobrado:</strong></label>
                        <InputNumber @bind-Value="cobroDetalle.ValorCobrado" class="form-control" style="font-size: 0.9rem;" />
                        <ValidationMessage For="@(() => cobroDetalle.ValorCobrado)" />
                    </div>

                <div class="table-responsive">
                    <table class="table table-light table-bordered mt-4">
                        <thead class="table table-striped text-center">
                            <tr>
                                <th>DetalleId</th>
                                <th>CobroId</th>
                                <th>PrestamoId</th>
                                <th>ValorCobrado</th>
                                <th>Eliminar</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detalle in ListacobroDetalle)
                            {
                                <tr>
                                    <td>@detalle.DetalleId</td>
                                    <td>@detalle.CobroId</td>
                                    <td>@detalle.PrestamoId</td>
                                    <td>@detalle.ValorCobrado</td>
                                    <td class="text-center">
                                        <a class="btn btn-outline-danger bi bi-trash" @onclick="() => EliminarDetalle(detalle)"></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (Alerta)
                {
                    <div class="alert alert-success mt-4" role="alert">
                        Se guardó el Cobro Detalles.
                    </div>
                }
                    <div class="card-footer text-center">
                        <div class="btn-group">
                      
                            <button type="button" @onclick="Nuevo" class="btn btn-outline-primary">
                                <span class="bi bi-plus-circle mt-3"></span> Nuevo
                            </button>
                        </div>
                            <button type="submit" class="btn btn-outline-success">
                                <span class="bi bi-floppy mt-3"></span> Guardar
                            </button>
                            <button type="button" @onclick="Volver" class="btn btn-outline-primary">
                                <span class="bi bi-arrow-left mt-3"></span> Volver
                            </button>

                </div>
            </div>
        </div>
    </div>
     </div>

</EditForm>

@code {
    [Parameter]
    public int CobroId { get; set; }
    public Cobros cobro { get; set; } = new Cobros();
    public CobroDetalle cobroDetalle { get; set; } = new CobroDetalle();
    public List<CobroDetalle> ListacobroDetalle { get; set; } = new List<CobroDetalle>();
    public List<Deudor> deudor { get; set; } = new List<Deudor>();
    private bool Alerta;
    private bool existe = false;
    private bool Agregar;
    public async Task Nuevo()
    {
        cobro = new Cobros();
        cobroDetalle = new CobroDetalle();
        existe = false;
    }

    public async Task Buscar()
    {
        existe = false;
        var encontrado = await cobroService.Buscar(cobro.CobroId);
        if (encontrado != null)
        {
            cobro = encontrado;
        }
        else
        {
            await Nuevo();
        }
    }

    public async Task<bool> Validar()
    {
        existe = await cobroService.Existe(cobro.CobroId);
        return !existe;
    }

    public async Task Guardar()
    {
        cobro.CobroDetalles = ListacobroDetalle;
        if (!await Validar())
        {
            return;
        }

        var guardado = await cobroService.Guardar(cobro);
        if (guardado)
        {
            Alerta = true;
        }
    }

    private async Task OnDeudorSelected(ChangeEventArgs e)
    {
        int selectedDeudorId = Convert.ToInt32(e.Value);
        cobro.DeudorId = selectedDeudorId;

        if (selectedDeudorId > 0)
        {

            var prestamo = await cobroService.RecuperarPrestamoPorDeudorId(selectedDeudorId);
            if (prestamo != null)
            {

                cobro.Monto = prestamo.Monto ?? 0;
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        deudor = await cobroService.ObtenerDeudoresConPrestamos();
    }

    public async Task EliminarDetalle(CobroDetalle detalle)
    {
        ListacobroDetalle.Remove(detalle);
      
    }

    public async Task AgregarDetalle()
    {
        ListacobroDetalle.Add(new CobroDetalle
            {
                DetalleId = cobroDetalle.DetalleId,
                CobroId = cobro.CobroId,
                PrestamoId = cobroDetalle.PrestamoId,
                ValorCobrado = cobroDetalle.ValorCobrado
            });
       
       Agregar= true;
        cobroDetalle = new CobroDetalle();
       
    }

    public async Task Volver()
    {
        navigationManager.NavigateTo("/Cobro/Index");
    }
}